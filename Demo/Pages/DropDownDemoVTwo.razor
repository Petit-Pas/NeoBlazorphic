@page "/dropdowndemovtwo"

<!--DropDownListDemo-->
@using NeoBlazorphic.StyleParameters
@using NeoBlazorphic.Components.Inputs.DropDownLists
@using NeoBlazorphic.Models.SelectableItems

<h3>DropDownListDemo</h3>




<DropDownList Items=@ThemeList T=string/>

<br />
<br />
<DropDownList Items=@ThemeList T=string/>
<br />

<br />
<br />
<br />
<DropDownListButton Item=ThemeList[0] T=string />

<br />
<br />
<br />

<button class="btn btn-primary" @onclick="() => Show = !Show"> Open/close </button>
<br />
<br />

<div>
    <div style="background: black; width: 250px; height: 3em;"> je suis le haut de la dropdownlist </div>
    @if (Show)
    {
        <div class="base-card-shape flat p-10 shadow-neo-out" style="position: fixed;"> je suis la dropdownlist </div>
    }
</div>

<br />
<DropDownListButton Item=ThemeList[0] T=string />


@code {

    public bool Show = false;

    public int AmountButtons
    {
        get => _amountButtons;
        set => _amountButtons = value;
    }
    
    private List<string> themes = new List<string>()
    {
        "gray", "primary", "danger"
    };

    private int _amountButtons = 3;
    public SelectableItemList<string> ThemeList { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ThemeList = new SelectableItemList<string>();
        ComputeItems();
    }

    private void ComputeItems()
    {
        for (var i = ThemeList.Count; i != AmountButtons; i += 1)
        {
            ThemeList.Add(new SelectableItem<string>(themes[i], i));
        }
    }
}
