@typeparam T
@inherits InputBase<T>

@using NeoBlazorphic.Components.Base.Cards
@using NeoBlazorphic.StyleParameters

@if (LabelPosition is ElementRelativePosition.Left or ElementRelativePosition.Right)
{
    <Card ShadowPosition="ShadowPosition.Out" Padding="Spacing._1" BorderRadius="@(new(4, "rem"))">

        <div class="d-grid" style="@GetColumnDefinition() @GetRowDefinition() align-items: center">

            @if (!string.IsNullOrWhiteSpace(Label))
            {
                <label class="mx-2" style="@GetLabelGridPositions()" for="@Id">@Label</label>
            }

            <div class="@GetAccentClass()" style="@GetFieldGridPositions()">

                <Card ShadowPosition="ShadowPosition.In" Padding="Spacing._2" BorderRadius="@GetFieldBorderRadius()">
                    <input @onfocusin="OnFocusIn" @onfocusout="OnFocusOut"
                        type="text" class="" style="-webkit-appearance: none; outline: none; background: transparent; color: var(--text-color)"
                           id="@Id" @bind="@CurrentValue" placeholder="@Placeholder"
                           @oninput="GetOnInputBinder()" />
                </Card>
            </div>
        </div>
    </Card>
}
else
{
    <div class="d-grid" style="@GetColumnDefinition() @GetRowDefinition() align-items: center">

        @if (!string.IsNullOrWhiteSpace(Label))
        {
            <label class="mx-2" style="@GetLabelGridPositions()" for="@Id">@Label</label>
        }

        <div class="@GetAccentClass()" style="@GetFieldGridPositions()">

            <Card ShadowPosition="ShadowPosition.In" Padding="Spacing._2" BorderRadius="@GetFieldBorderRadius()">
                <input @onfocusin="OnFocusIn" @onfocusout="OnFocusOut"
                    type="text" class="" style=" -webkit-appearance: none; outline: none; background: transparent; color: var(--text-color)"
                           id="@Id" @bind="@CurrentValue" placeholder="@Placeholder"
                           @oninput="GetOnInputBinder()" />
            </Card>
        </div>
    </div>
}

<div class="" style="">
    <ValidationMessage For="@ValidationFor"/>
</div>
