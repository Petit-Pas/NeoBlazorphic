@typeparam T
@inherits InputBase<T>

@using NeoBlazorphic.Components.Base.Cards
@using NeoBlazorphic.StyleParameters

@using NeoBlazorphic.Components.ToolTips

<div @onmouseover="OnMouseOver" @onmouseout="OnMouseOut">
    <ToolTip>
        <ChildContent>

            <div class="input-group @GetAccentColor()" style="">

                @if (!string.IsNullOrWhiteSpace(Label))
                {
                    <label class="input-label" for="@Id">@Label</label>
                }
                
                
                    <div class="input-row">
                        @if (InputFieldPrefix != null)
                        {
                        <Card ShadowPosition="ShadowPosition.Out" Padding="Spacing._2"  BorderRadius="_squaredOnRight">
                                <div class="input-prefix">
                                    @InputFieldPrefix
                                </div>
                            </Card>
                        }

                        <div class="input @GetInputAccentClass()">

                            <Card ShadowPosition="ShadowPosition.In" Padding="Spacing._2" BorderRadius="@GetFieldBorderRadius()">
                                <input @onfocusin="OnFocusIn" @onfocusout="OnFocusOut"
                                       type="text" class="" style="-webkit-appearance: none; outline: none; background: transparent; color: var(--text-color); width: 100%"
                                       id="@Id" placeholder="@Placeholder"
                                       @oninput="GetOnInputBinder()" @onchange="GetOnChangeBinder()" value="@CurrentValueAsString"/>
                            </Card>
                        </div>

                        @if (InputFieldSuffix != null)
                        {
                            <Card ShadowPosition="ShadowPosition.Out" Padding="Spacing._2" BorderRadius="_squaredOnLeft">
                                <div class="input-suffix">
                                    @InputFieldSuffix
                                </div>
                            </Card>
                        }
                    </div>
            </div>

        </ChildContent>
        
        <ToolTipContent>
            @if (IsHovered || IsFocused)
            {
                <div>
                    <Card ShouldBeVisibleWhenEmpty="false">
                        <ValidationMessage For="@ValidationFor"/>
                    </Card>
                </div>
            }
        </ToolTipContent>
    </ToolTip>
</div>


