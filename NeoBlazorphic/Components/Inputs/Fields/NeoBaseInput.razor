@typeparam T
@inherits InputBase<T>

@using NeoBlazorphic.Components.Base.Cards
@using NeoBlazorphic.StyleParameters

@using NeoBlazorphic.Components.ToolTips

<ToolTip ForceVisible="IsFocused">
    <ChildContent>
        <div class="input-group">
            
            @* Optional label above the field *@
            @if (!string.IsNullOrWhiteSpace(Label))
            {
                <label class="input-label" for="@Id">@Label</label>
            }

            <div class="input-row">                
                
                @* Optional prefix to the field *@
                @if (PrefixRenderFragment != null)
                {
                    @* This section will automatically take grid.col 1 if displayed *@
                    <Card BorderType="NeoBorderType.NeoLightBorder" Padding="PrefixPadding" BorderRadius="_squaredOnRight">
                        @PrefixRenderFragment
                    </Card>
                }
                
                @* Actual input *@
                @* Will override colors in that order: primary when focused > danger if invalid > base by default *@
                <div class="input-container neo-base @InvalidClass neo-primary-on-focus">

                    <Card Color="ThemeColor.None" BorderType="NeoBorderType.NeoShadowIn" Padding="Spacing._2" BorderRadius="@GetFieldBorderRadius()">
                        <input type="text" id="@Id" placeholder="@Placeholder"
                               class="input"
                               @onfocusin="OnFocusIn" @onfocusout="OnFocusOut"
                               @oninput="GetOnInputBinder()" @onchange="GetOnChangeBinder()"
                               value="@CurrentValueAsString" />
                    </Card>
                </div>
                
                @* Optional suffix to the field *@
                @if (SuffixRenderFragment != null)
                {
                    @* This section will automatically take grid.col 3 if displayed *@
                    <Card BorderType="NeoBorderType.NeoLightBorder" Padding="SuffixPadding" BorderRadius="_squaredOnLeft">
                        @SuffixRenderFragment
                    </Card>
                }
            </div>
        </div>

    </ChildContent>
        
    <ToolTipContent>
        <Card>
            <ValidationMessage For="@ValidationFor"/>
        </Card>
    </ToolTipContent>
</ToolTip>



