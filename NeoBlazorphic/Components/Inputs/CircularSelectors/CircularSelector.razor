@using NeoBlazorphic.Extensions.BaseTypes;

@typeparam T

<CascadingValue Value="this">
    
    @if (ChildContent != default)
    {
        @* Will fill the ButtonContent property through AddButtonContentIfMissing() by using the cascadingValue *@
        @ChildContent
    }
    <svg xmlns="http://www.w3.org/1999/xhtml"
         class="circular-selector @ColorClass @ShapeClass" 
         width=300 height=300 viewBox="-25 -25 50 50">
        <defs>
            @* Gradient for the center of the selector *@
            <linearGradient id=@($"{_uid}-CenterGradient") x1="0.25" y1="0.25" x2="0.75" y2="0.75">
                <stop offset="0%" stop-color="var(--start-gradient)"/>
                <stop offset="100%" stop-color="var(--end-gradient)"/>
            </linearGradient>
        </defs>

        @{ var i = 0; }
        @foreach (var buttonContent in ButtonContents)
        {
            <CircularSelectorButton Shape=@Shape AngleShift=@AngleForButton(i) ButtonAngle=@ButtonAngle PathString=@_buttonSvgPath
                                    ButtonContent=@buttonContent 
                                    SelectedTheme="Selected"/>
            i += 1;
        }

        <circle class="circular-selector-center" 
                cx="0" cy="0" r="10"/>
        <text class="circular-selector-center-text"
              text-anchor="middle" x="0" y="1">
            @CenterText
        </text>
    </svg>
</CascadingValue>
