@inherits UiComponentBase

@using NeoBlazorphic.StyleParameters
@using NeoBlazorphic.Extensions.BaseTypes

<svg width=@ViewBoxSize height=@ViewBoxSize viewBox="-25 -25 50 50" style="filter:drop-shadow(5px 5px 5px var(--dark-shadow)) drop-shadow(-5px -5px 5px var(--light-shadow));">
    <defs>
        <!-- Gradient for the center of the selector -->
        <linearGradient id=@($"{UID}-CenterGradient") x1="0.25" y1="0.25" x2="0.75" y2="0.75">
            @if (Shape == BackgroundShape.Concave)
            {
                <stop offset="0%" stop-color="var(--light-color)"/>
                <stop offset="100%" stop-color="var(--dark-color)"/>
            }
            else if (Shape == BackgroundShape.Convex)
            {
                <stop offset="0%" stop-color="var(--dark-color)"/>
                <stop offset="100%" stop-color="var(--light-color)"/>
            }
        </linearGradient>
    </defs>
    @{
        // SVG shape of every button that composes the circular sector
        string pathString = $"M 0 0 L 20 0 A 20 20 0 0 0 {AngleEnd.X.ToInvariantString()} {AngleEnd.Y.ToInvariantString()} L 0 0";
    }
    
    <!-- Drawing buttons first, to be able to draw the center above it -->
    @for (var i = 0; i != AmountButtons; i += 1) {
        int angle = -i * ButtonAngle + AngleOffset;
        int stock = i;
        <CircularSelectorButton Shape=@Shape AngleShift=@angle ButtonAngle="ButtonAngle" IsSelected=@(SelectedIndex == AmountButtons - stock) PathString=@pathString OnMouseClickCallBack="(e) => OnButtonClicked((int)AmountButtons - stock)" OnMouseOverCallBack="(e) => OnButtonMouseOver((int)AmountButtons - stock)" Index=@((int)AmountButtons - i)></CircularSelectorButton>
    }
    
    <!-- Drawing the center of the selector -->
    <circle cx="0" cy="0" r="10" style="stroke-width:0.15px; fill:url(@($"#{UID}-CenterGradient"));" />
    <text text-anchor="middle" x="0" y="1" style="fill:white; stroke: transparent;font: bold 4px Verdana, Helvetica, Arial, sans-serif;pointer-events: none;"> @CenterText </text>

</svg>
