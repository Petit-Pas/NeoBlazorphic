@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/*  Different shapes handled by the library
    Mirrors what you can find in NeoBlazorphic.StyleParameters.BackgroundShape  

    based on https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
*/

@property --base-card-left-color {
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

@property --base-card-right-color {
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

.base-card-shape {
    --base-card-left-color: var(--main-color);
    --base-card-right-color: var(--main-color);
    background: linear-gradient(145deg, var(--base-card-left-color), var(--base-card-right-color));
    transition: --base-card-left-color 0.2s, 
                --base-card-right-color 0.2s;
    overflow: hidden;
}

.flat {
    --base-card-left-color: var(--main-color);
    --base-card-right-color: var(--main-color);
}

.convex {
    --base-card-left-color: var(--light-color);
    --base-card-right-color: var(--dark-color);
}

.concave {
    --base-card-left-color: var(--dark-color);
    --base-card-right-color: var(--light-color);
}

/* Default colors served with the library
 more can be used if defined with the same variables.*/

.base-neo-color {
    color: var(--text-color);
    background: var(--main-color);
}

/*.neo-primary {
    --main-color: #5100a1;
    --dark-shadow: #200040;
    --light-shadow: #8200ff;
    --dark-color: #390091;
    --light-color: #6700ac;
    --text-color: white;
}

.neo-danger {
    --main-color: #d92645;
    --dark-shadow: #570f1c;
    --light-shadow: #ff3d6e;
    --dark-color: #af1e37;
    --light-color: #ea3e5c;
    --text-color: white;
}
*/
.neo-gray {
    --base-main-color: #202020;
    --base-dark-color: #1a1a1a;
    --base-light-color: #383838;
    --base-text-color: white;
    --base-dark-shadow: #0d0d0d;
    --base-light-shadow: #333333;
    /**/
    --danger-main-color: #d92645;
    --danger-dark-color: #af1e37;
    --danger-light-color: #ea3e5c;
    --danger-text-color: white;
    --danger-dark-shadow: #570f1c;
    --danger-light-shadow: #ff3d6e;
    /**/
    --primary-main-color: #5100a1;
    --primary-dark-color: #390091;
    --primary-light-color: #6700ac;
    --primary-text-color: white;
    --primary-dark-shadow: #200040;
    --primary-light-shadow: #8200ff;
    /**/
    --main-color: var(--base-main-color);
    --dark-color: var(--base-dark-color);
    --light-color: var(--base-light-color);
    --text-color: var(--base-text-color);
    --dark-shadow: var(--base-dark-shadow);
    --light-shadow: var(--base-light-shadow);
    /* 
        These two are used only with additional modifiers (such as danger or primary
        Their purpose is to be able to chose between the default shadows 
        ex: --dark-shadow and --light-shadow, which for this case are gray no matter the modifier, 
            or the shadows of the modifier, such as red or indigo by using --alternate-dark-shadow and --alternate-light-shadow
        This was mostly needed to make the difference between inside and outside shadows, 
        since one needs to use the background of the parent, while the other one the background of the child
        Note: For the main theme without modifiers, it is indeed the same as the normal shadow colors.
    */
    --alternate-dark-shadow: var(--base-dark-shadow);
    --alternate-light-shadow: var(--base-light-shadow);
}
.neo-danger {
    --main-color: var(--danger-main-color);
    --dark-color: var(--danger-dark-color);
    --light-color: var(--danger-light-color);
    --text-color: var(--danger-text-color);
    --alternate-dark-shadow: var(--danger-dark-shadow);
    --alternate-light-shadow: var(--danger-light-shadow);
}
.neo-primary {
    --main-color: var(--primary-main-color);
    --dark-color: var(--primary-dark-color);
    --light-color: var(--primary-light-color);
    --text-color: var(--primary-text-color);
    --alternate-dark-shadow: var(--primary-dark-shadow);
    --alternate-light-shadow: var(--primary-light-shadow);
}

::selection {
    color: var(--main-color) !important;
    background: var(--text-color) !important;
}

/* 
    States
*/

.neo-disabled {
    opacity: 0.4;
}

/* 
    alignments
*/

/* 
    This class extends the comportment already available in tailwind to center an element in a relative parent 
    https://tailwindcss.com/docs/top-right-bottom-left
*/
.inset-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.invisible-when-empty:empty {
    display: none;
}