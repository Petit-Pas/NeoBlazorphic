@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/*  Different shapes handled by the library
    Mirrors what you can find in NeoBlazorphic.StyleParameters.BackgroundShape  

    based on https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
*/

@property --base-card-left-color {
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

@property --base-card-right-color {
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

.base-card-shape {
    --base-card-left-color: var(--main-color);
    --base-card-right-color: var(--main-color);
    background: linear-gradient(145deg, var(--base-card-left-color), var(--base-card-right-color));
    transition: --base-card-left-color 0.2s, 
                --base-card-right-color 0.2s;
}

.flat {
    --base-card-left-color: var(--main-color);
    --base-card-right-color: var(--main-color);
}

.convex {
    --base-card-left-color: var(--light-color);
    --base-card-right-color: var(--dark-color);
}

.concave {
    --base-card-left-color: var(--dark-color);
    --base-card-right-color: var(--light-color);
}

/* Default colors served with the library
 more can be used if defined with the same variables.*/

.base-neo-color {
    color: var(--text-color);
    background: var(--main-color);
}

.neo-primary {
    --main-color: #5100a1;
    --dark-shadow: #200040;
    --light-shadow: #8200ff;
    --dark-color: #390091;
    --light-color: #6700ac;
    --text-color: white;
}

.neo-danger {
    --main-color: #d92645;
    --dark-shadow: #570f1c;
    --light-shadow: #ff3d6e;
    --dark-color: #af1e37;
    --light-color: #ea3e5c;
    --text-color: white;
}

.neo-gray {
    --main-color: #202020;
    --dark-shadow: #0d0d0d;
    --light-shadow: #333333;
    --dark-color: #1a1a1a;
    --light-color: #383838;
    --text-color: white;
}

/* 
    States
*/

.neo-disabled {
    opacity: 0.4;
}

/* 
    alignments
*/

/* 
    This class extends the comportment already available in tailwind to center an element in a relative parent 
    https://tailwindcss.com/docs/top-right-bottom-left
*/
.inset-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}