@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

// Different shapes handled by the library
// Mirrors what you can find in NeoBlazorphic.StyleParameters.BackgroundShape


// I cannot have a tailwind file starting with a property
// I had one before, the transition animation were not working properly
.do-not-use{
}

@property --base-card-left-color {
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

@property --base-card-right-color {
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

.base-card-shape {
    --base-card-left-color: var(--main-color);
    --base-card-right-color: var(--main-color);
    background: linear-gradient(145deg, var(--base-card-left-color), var(--base-card-right-color));
    // TODO: cette transition n'a pas de sens:
    // si je lis bien, ce code serait transcrit par :
    // transition: #5100a1 .2s, #5100a1 .2s, ce qui n'a pas de sens.
    // transition n'accepte que certains noms de propriétés et pas les valeurs elles-mêmes.
    // ex: transition: padding .2s, margin-top .5s, background-color .2s;
    /*    transition: --base-card-left-color 0.2s, 
                --base-card-right-color 0.2s;*/
}

.flat {
    --base-card-left-color: var(--main-color);
    --base-card-right-color: var(--main-color);
}

.convex {
    --base-card-left-color: var(--light-color);
    --base-card-right-color: var(--dark-color);
}

.concave {
    --base-card-left-color: var(--dark-color);
    --base-card-right-color: var(--light-color);
}

/* Default colors served with the library
 more can be used if defined with the same variables.*/

// TODO: les propriétés color & background reçoivent toujours les mêmes valeurs.
// n'hésite pas, sauf si cela devait changer, à en faire une classe commune à chacun des thèmes.
/*.neo-base {
    color: var(--text-color);
    background: var(--main-color);
}*/

// TODO: je vois que utilises SCSS, mais aucune de ses fonctionnalités. A la place, tu utilises du CSS pur. 
// Peut être que ce serait intéressant et ça simplifierait sûrement certaines déclarations de style.

// TODO: tu mixes deux choses ici:
// tes classes neo-* sont utilisées comme thème (drop down), 
// mais aussi comme tranformation de couleur pour une classe de style graphique.
// il faut vraiment éviter ça car les deux choses n'ont rien à voir.

.neo-primary {
    --main-color: #5100a1;
    --dark-shadow: #200040;
    --light-shadow: #8200ff;
    --dark-color: #390091;
    --light-color: #6700ac;
    --text-color: white;
    color: var(--text-color);
    background: var(--main-color);
}

.neo-danger {
    --main-color: #d92645;
    --dark-shadow: #570f1c;
    --light-shadow: #ff3d6e;
    --dark-color: #af1e37;
    --light-color: #ea3e5c;
    --text-color: white;
    color: var(--text-color);
    background: var(--main-color);
}

.neo-gray {
    --main-color: #202020;
    --dark-shadow: #0d0d0d;
    --light-shadow: #333333;
    --dark-color: #1a1a1a;
    --light-color: #383838;
    --text-color: white;
    color: var(--text-color);
    background: var(--main-color);
}

.selected {
    filter: brightness(1.5);
}
